# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pfespace', [dirname(__file__)])
        except ImportError:
            import _pfespace
            return _pfespace
        if fp is not None:
            try:
                _mod = imp.load_module('_pfespace', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _pfespace = swig_import_helper()
    del swig_import_helper
else:
    import _pfespace
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0


try:
    import weakref
    weakref_proxy = weakref.proxy
except Exception:
    weakref_proxy = lambda x: x



_pfespace.MFEM_TIMER_TYPE_swigconstant(_pfespace)
MFEM_TIMER_TYPE = _pfespace.MFEM_TIMER_TYPE
import operators
import vector
import array
import fespace
import coefficient
import matrix
import intrules
import sparsemat
import densemat
import eltrans
import fe
import mesh
import ncmesh
import element
import geom
import table
import vertex
import fe_coll
import lininteg
import pmesh
import pncmesh
import communication
import sets
import hypre
class ParFiniteElementSpace(fespace.FiniteElementSpace):
    __swig_setmethods__ = {}
    for _s in [fespace.FiniteElementSpace]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ParFiniteElementSpace, name, value)
    __swig_getmethods__ = {}
    for _s in [fespace.FiniteElementSpace]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ParFiniteElementSpace, name)
    __repr__ = _swig_repr
    __swig_setmethods__["num_face_nbr_dofs"] = _pfespace.ParFiniteElementSpace_num_face_nbr_dofs_set
    __swig_getmethods__["num_face_nbr_dofs"] = _pfespace.ParFiniteElementSpace_num_face_nbr_dofs_get
    if _newclass:
        num_face_nbr_dofs = _swig_property(_pfespace.ParFiniteElementSpace_num_face_nbr_dofs_get, _pfespace.ParFiniteElementSpace_num_face_nbr_dofs_set)
    __swig_setmethods__["face_nbr_element_dof"] = _pfespace.ParFiniteElementSpace_face_nbr_element_dof_set
    __swig_getmethods__["face_nbr_element_dof"] = _pfespace.ParFiniteElementSpace_face_nbr_element_dof_get
    if _newclass:
        face_nbr_element_dof = _swig_property(_pfespace.ParFiniteElementSpace_face_nbr_element_dof_get, _pfespace.ParFiniteElementSpace_face_nbr_element_dof_set)
    __swig_setmethods__["face_nbr_ldof"] = _pfespace.ParFiniteElementSpace_face_nbr_ldof_set
    __swig_getmethods__["face_nbr_ldof"] = _pfespace.ParFiniteElementSpace_face_nbr_ldof_get
    if _newclass:
        face_nbr_ldof = _swig_property(_pfespace.ParFiniteElementSpace_face_nbr_ldof_get, _pfespace.ParFiniteElementSpace_face_nbr_ldof_set)
    __swig_getmethods__["face_nbr_glob_dof_map"] = _pfespace.ParFiniteElementSpace_face_nbr_glob_dof_map_get
    if _newclass:
        face_nbr_glob_dof_map = _swig_property(_pfespace.ParFiniteElementSpace_face_nbr_glob_dof_map_get)
    __swig_setmethods__["send_face_nbr_ldof"] = _pfespace.ParFiniteElementSpace_send_face_nbr_ldof_set
    __swig_getmethods__["send_face_nbr_ldof"] = _pfespace.ParFiniteElementSpace_send_face_nbr_ldof_get
    if _newclass:
        send_face_nbr_ldof = _swig_property(_pfespace.ParFiniteElementSpace_send_face_nbr_ldof_get, _pfespace.ParFiniteElementSpace_send_face_nbr_ldof_set)

    def __init__(self, *args):
        this = _pfespace.new_ParFiniteElementSpace(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def GetComm(self):
        return _pfespace.ParFiniteElementSpace_GetComm(self)

    def GetNRanks(self):
        return _pfespace.ParFiniteElementSpace_GetNRanks(self)

    def GetMyRank(self):
        return _pfespace.ParFiniteElementSpace_GetMyRank(self)

    def GetParMesh(self):
        return _pfespace.ParFiniteElementSpace_GetParMesh(self)

    def GetDofSign(self, i):
        return _pfespace.ParFiniteElementSpace_GetDofSign(self, i)

    def GetDofOffsets(self):
        return _pfespace.ParFiniteElementSpace_GetDofOffsets(self)

    def GetTrueDofOffsets(self):
        return _pfespace.ParFiniteElementSpace_GetTrueDofOffsets(self)

    def GlobalVSize(self):
        return _pfespace.ParFiniteElementSpace_GlobalVSize(self)

    def GlobalTrueVSize(self):
        return _pfespace.ParFiniteElementSpace_GlobalTrueVSize(self)

    def GetTrueVSize(self):
        return _pfespace.ParFiniteElementSpace_GetTrueVSize(self)

    def GetElementDofs(self, i):
        from  .array import intArray
        vdofs = intArray()
        _pfespace.ParFiniteElementSpace_GetElementDofs(self, i, vdofs)
        return vdofs.ToList()



    def GetBdrElementDofs(self, i):
        from  .array import intArray
        vdofs = intArray()
        _pfespace.ParFiniteElementSpace_GetBdrElementDofs(self, i, vdofs)
        return vdofs.ToList()



    def GetFaceDofs(self, i):
        from  .array import intArray
        vdofs = intArray()
        _pfespace.ParFiniteElementSpace_GetFaceDofs(self, i, vdofs)
        return vdofs.ToList()



    def GetSharedEdgeDofs(self, group, ei, dofs):
        return _pfespace.ParFiniteElementSpace_GetSharedEdgeDofs(self, group, ei, dofs)

    def GetSharedFaceDofs(self, group, fi, dofs):
        return _pfespace.ParFiniteElementSpace_GetSharedFaceDofs(self, group, fi, dofs)

    def Dof_TrueDof_Matrix(self):
        return _pfespace.ParFiniteElementSpace_Dof_TrueDof_Matrix(self)

    def GetPartialConformingInterpolation(self):
        return _pfespace.ParFiniteElementSpace_GetPartialConformingInterpolation(self)

    def NewTrueDofVector(self):
        return _pfespace.ParFiniteElementSpace_NewTrueDofVector(self)

    def DivideByGroupSize(self, vec):
        return _pfespace.ParFiniteElementSpace_DivideByGroupSize(self, vec)

    def GroupComm(self):
        return _pfespace.ParFiniteElementSpace_GroupComm(self)

    def ScalarGroupComm(self):
        return _pfespace.ParFiniteElementSpace_ScalarGroupComm(self)

    def Synchronize(self, ldof_marker):
        return _pfespace.ParFiniteElementSpace_Synchronize(self, ldof_marker)

    def GetEssentialVDofs(self, bdr_attr_is_ess, ess_dofs):
        return _pfespace.ParFiniteElementSpace_GetEssentialVDofs(self, bdr_attr_is_ess, ess_dofs)

    def GetEssentialTrueDofs(self, bdr_attr_is_ess, ess_tdof_list):
        return _pfespace.ParFiniteElementSpace_GetEssentialTrueDofs(self, bdr_attr_is_ess, ess_tdof_list)

    def GetLocalTDofNumber(self, ldof):
        return _pfespace.ParFiniteElementSpace_GetLocalTDofNumber(self, ldof)

    def GetGlobalTDofNumber(self, ldof):
        return _pfespace.ParFiniteElementSpace_GetGlobalTDofNumber(self, ldof)

    def GetGlobalScalarTDofNumber(self, sldof):
        return _pfespace.ParFiniteElementSpace_GetGlobalScalarTDofNumber(self, sldof)

    def GetMyDofOffset(self):
        return _pfespace.ParFiniteElementSpace_GetMyDofOffset(self)

    def GetMyTDofOffset(self):
        return _pfespace.ParFiniteElementSpace_GetMyTDofOffset(self)

    def GetProlongationMatrix(self):
        return _pfespace.ParFiniteElementSpace_GetProlongationMatrix(self)

    def GetRestrictionMatrix(self):
        return _pfespace.ParFiniteElementSpace_GetRestrictionMatrix(self)

    def ExchangeFaceNbrData(self):
        return _pfespace.ParFiniteElementSpace_ExchangeFaceNbrData(self)

    def GetFaceNbrVSize(self):
        return _pfespace.ParFiniteElementSpace_GetFaceNbrVSize(self)

    def GetFaceNbrElementVDofs(self, i, vdofs):
        return _pfespace.ParFiniteElementSpace_GetFaceNbrElementVDofs(self, i, vdofs)

    def GetFaceNbrFaceVDofs(self, i, vdofs):
        return _pfespace.ParFiniteElementSpace_GetFaceNbrFaceVDofs(self, i, vdofs)

    def GetFaceNbrFE(self, i):
        return _pfespace.ParFiniteElementSpace_GetFaceNbrFE(self, i)

    def GetFaceNbrFaceFE(self, i):
        return _pfespace.ParFiniteElementSpace_GetFaceNbrFaceFE(self, i)

    def GetFaceNbrGlobalDofMap(self):
        return _pfespace.ParFiniteElementSpace_GetFaceNbrGlobalDofMap(self)

    def Lose_Dof_TrueDof_Matrix(self):
        return _pfespace.ParFiniteElementSpace_Lose_Dof_TrueDof_Matrix(self)

    def LoseDofOffsets(self):
        return _pfespace.ParFiniteElementSpace_LoseDofOffsets(self)

    def LoseTrueDofOffsets(self):
        return _pfespace.ParFiniteElementSpace_LoseTrueDofOffsets(self)

    def Conforming(self):
        return _pfespace.ParFiniteElementSpace_Conforming(self)

    def Nonconforming(self):
        return _pfespace.ParFiniteElementSpace_Nonconforming(self)

    def Update(self, want_transform=True):
        return _pfespace.ParFiniteElementSpace_Update(self, want_transform)

    def UpdatesFinished(self):
        return _pfespace.ParFiniteElementSpace_UpdatesFinished(self)
    __swig_destroy__ = _pfespace.delete_ParFiniteElementSpace
    __del__ = lambda self: None

    def TrueVSize(self):
        return _pfespace.ParFiniteElementSpace_TrueVSize(self)
ParFiniteElementSpace_swigregister = _pfespace.ParFiniteElementSpace_swigregister
ParFiniteElementSpace_swigregister(ParFiniteElementSpace)

# This file is compatible with both classic and new-style classes.


