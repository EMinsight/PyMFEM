name: Test_with_MFEM_release

on:
  pull_request:
    types:
      - labeled
  #push:
  #  branches: [ test ]
  #pull_request:
  #  branches: [ test ]
  #  types: [synchronize]

jobs:
  build:
    if: contains(github.event.pull_request.labels.*.name, 'in-test-with-mfem-release')
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
        #python-version: ["3.10"]
        #os: [ubuntu-latest]
        os: [ubuntu-20.04]
        # USE_FLAGS :  cuda, parallel, libceed
        env:
           - { USE_FLAGS: "000"}
           - { USE_FLAGS: "010"}

        include:
           - os: macos-latest
             python-version: 3.9
             env: {USE_FLAGS: "000"}

    runs-on: ${{ matrix.os }}	   
    #env: ${{ matrix.env }}
    env: 
       USE_FLAGS: ${{ matrix.env.USE_FLAGS }}
       CUDA: "11.5"
       SANDBOX: ~/sandbox

    steps:
    - uses: actions/checkout@v2
#      with:
#        ref: master_tracking_branch
 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}



    - name: RUN_TEST
      if: always()
      run:
        python -c "import sys;sys.exit(1)"
        touch test/sandbox.tar.gz
        echo $?
        exit $?

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      if: failure()
      with:
          name: test_results
          path: test/sandbox.tar.gz
          retention-days: 1